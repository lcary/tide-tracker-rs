name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    container:
      image: rust:1.75-slim
    steps:
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y pkg-config libssl-dev git

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install Rust toolchain
      run: |
        rustup component add clippy rustfmt

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --verbose

    - name: Run doctests
      run: cargo test --doc

    - name: Build release binary
      run: cargo build --release

    - name: Check binary size
      run: |
        echo "Binary size:"
        ls -lh target/release/tide-tracker
        echo "Stripped binary size:"
        strip target/release/tide-tracker
        ls -lh target/release/tide-tracker

  build-cross-platform:
    name: Build Cross-Platform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build for ${{ matrix.target }}
      run: cross build --release --target ${{ matrix.target }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tide-tracker-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/tide-tracker
