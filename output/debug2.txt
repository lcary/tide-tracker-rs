🎨 Rendering SIMPLIFIED tide chart to e-ink display...
   📊 Tide series has 145 samples
   📐 Chart area: 360x260 at (20, 20)
   🔲 Drawing border...
   🔲 Drawing chart border...
   📏 Drawing axes...
   📏 Drawing simple axes...
   📈 Drawing test wave pattern...
   🌊 Drawing test sine wave...
   🕐 Drawing center time marker...
   🕐 Drawing center marker...
   📊 Attempting to plot real tide data...
   📊 Simple tide data plotting...
   📊 Using 145 samples, height range: 1.1 to 9.1 ft
✅ Simplified tide chart rendering complete
📤 Updating e-ink display...
     ⚠️  This should be called EXACTLY ONCE to avoid flickering
     🔄 About to call epd.display_c_exact() - this matches C code exactly including red inversion
   📤 DISPLAY FUNCTION CALLED (EXACT C MATCH with red inversion)...
   📐 Display dimensions: 400x300 pixels = 50 bytes per row
    Buffer sizes: black=15000 bytes, red=15000 bytes
   📊 Pixel counts: 5643 black pixels, 1274 red pixels
   📝 Sending black buffer (using 0x24 command)...
   ✅ Black buffer sent successfully
   🔴 Sending red buffer (using 0x26 command, WITH INVERSION like C code)...
   ✅ Red buffer sent successfully (with inversion like C code)
   🔆 Turning on display (matching C code exactly)...
   📡 Waiting for display (BUSY pin check)...
   ✅ Display ready (BUSY went LOW after 221 checks)
   ✅ Image data sent and display updated (C code exact match)
     ✅ epd.display_c_exact() completed - data written with C code exact behavior
     💤 CRITICAL: Calling power off and deep sleep for persistence...
   💤 POWER OFF AND DEEP SLEEP (CRITICAL FOR PERSISTENCE)...
       This follows the persistence cheat sheet exactly
       📤 Sending 0x02 (POWER_OFF)...
       📡 Waiting for BUSY after POWER_OFF...
   📡 Waiting for display (BUSY pin check)...
   ✅ Display ready (BUSY went LOW after 0 checks)
       📤 Sending 0x10 (DEEP_SLEEP)...
       📤 Sending 0x01 (mandatory byte for SSD1683/SSD1680)...
       📡 Waiting for BUSY after DEEP_SLEEP...
   📡 Waiting for display (BUSY pin check)...
   ⚠️  BUSY pin timeout after 5 seconds - display may be stuck
   ✅ Display ready (BUSY went LOW after 501 checks)
   ✅ Power off and deep sleep completed - image should now persist!
       The display controller is now parked safely for persistence
     ✅ Power off and deep sleep completed - image should now persist!
     ✅ Display function completed
✅ E-ink display updated successfully with PERSISTENCE SEQUENCE!
   📋 Persistence checklist completed:
   ✅ 1. Drew image once (no clear after)
   ✅ 2. Sent POWER_OFF (0x02) + wait BUSY
   ✅ 3. Sent DEEP_SLEEP (0x10) + 0x01 + wait BUSY
   ✅ 4. Display controller parked safely

🎯 Image should now persist indefinitely (even with Pi powered off)
   This follows the persistence cheat sheet exactly
   You can now safely power off the Pi - image will remain

