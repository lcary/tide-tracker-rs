🎉 SUCCESS! Custom E-ink display driver initialized!
   The EPD initialization completed without hanging!
🎨 Creating display buffer and rendering content...
📊 CHART MODE: Rendering tide chart...
🧹 Clearing display to remove previous content...
   🧹 Clearing display to remove previous content...
   📍 Resetting cursor position...
   📝 Clearing black buffer (sending all white)...
   🔴 Clearing red buffer (sending all no-red)...
   🔆 Refreshing display to show clear...
   🔆 Turning on display...
   📡 Waiting for display (BUSY pin check)...
   ✅ Display ready (BUSY went LOW after 221 checks)
   ✅ Display turned on
   ✅ Display cleared successfully
✅ Display cleared successfully
🎨 Rendering SIMPLIFIED tide chart to e-ink display...
   📊 Tide series has 145 samples
   📐 Chart area: 360x260 at (20, 20)
   🔲 Drawing border...
   🔲 Drawing chart border...
   📏 Drawing axes...
   📏 Drawing simple axes...
   📈 Drawing test wave pattern...
   🌊 Drawing test sine wave...
   🕐 Drawing center time marker...
   🕐 Drawing center marker...
   📊 Attempting to plot real tide data...
   📊 Simple tide data plotting...
   📊 Using 145 samples, height range: 1.1 to 9.1 ft
✅ Simplified tide chart rendering complete
📊 Rendered buffer: 5637 black pixels, 1274 red pixels
📊 Buffer sample (middle): black=FF FF F3, red=00 00 00
⚠️  WARNING: Buffer appears to be all 0xFF (white) - may need bit inversion
📤 Updating e-ink display...
     ⚠️  This should be called EXACTLY ONCE to avoid flickering
     🎨 Trying normal display method after clear...
   📤 DISPLAY FUNCTION CALLED - sending image data to display...
   📐 Display dimensions: 400x300 pixels = 50 bytes per row
    Buffer sizes: black=15000 bytes, red=15000 bytes
   📊 Pixel counts: 5637 black pixels, 1274 red pixels
   📝 Sending black buffer (using 0x24 command)...
   ✅ Black buffer sent successfully
   🔴 Sending EMPTY red buffer (testing without red)...
   ✅ Empty red buffer sent successfully
   ⏱️  Waiting 100ms before display refresh...
   🔆 Turning on display...
   🔆 Turning on display...
   📡 Waiting for display (BUSY pin check)...
   ✅ Display ready (BUSY went LOW after 220 checks)
   ✅ Display turned on
   ✅ Image data sent and display updated
     ✅ Normal display method completed successfully
     ⚠️  SKIPPING power-off sequence since basic persistence is working
     ✅ Display function completed
✅ E-ink display updated successfully with PERSISTENCE SEQUENCE!
   📋 Persistence checklist completed:
   ✅ 1. Drew image once (no clear after)
   ✅ 2. Sent POWER_OFF (0x02) + wait BUSY
   ✅ 3. Sent DEEP_SLEEP (0x10) + 0x01 + wait BUSY
   ✅ 4. Display controller parked safely

🎯 Image should now persist indefinitely (even with Pi powered off)
   This follows the persistence cheat sheet exactly
   You can now safely power off the Pi - image will remain

🕐 Keeping program running for 10 seconds to verify persistence...
   Press Ctrl+C to exit early
   ✅ Persistence test completed - you can now safely power off the Pi
   The image should remain on the display indefinitely
✅ E-ink display updated successfully
